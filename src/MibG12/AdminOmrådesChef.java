/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MibG12;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author 46737
 */
public class AdminOmrådesChef extends javax.swing.JFrame {

    private static InfDB idb;
    private String agent;
    private NyRegistreraAlien nRA;

    /**
     * Creates new form AdminOmrådesChef
     */
    public AdminOmrådesChef(InfDB idb, String agent) {
        initComponents();
        this.idb = idb;
        this.agent = agent;
        nRA = new NyRegistreraAlien (idb, agent, true);
        laggTillOmrade(jComboBox1);
        nRA.laggTillAgent(cbAgenter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ButtonTillbaka = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        cbAgenter = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Agent");

        jLabel2.setText("Område");

        ButtonTillbaka.setText("Tillbaka");
        ButtonTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTillbakaActionPerformed(evt);
            }
        });

        jLabel4.setText("Mata in den agent du vill göra till områdeschef");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj:" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        cbAgenter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj:" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonTillbaka)
                        .addGap(120, 120, 120)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, 0, 81, Short.MAX_VALUE)
                            .addComponent(cbAgenter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbAgenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonTillbaka)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Metod för att verkställa valet av områdeschef

        try {

            String agentNamn = cbAgenter.getSelectedItem().toString();
            String omrade = jComboBox1.getSelectedItem().toString();

            String namnID = "select Agent_ID from Agent where namn = '" + agentNamn + "'";
            String omradesID = "select Omrades_ID from Omrade where Benamning = '" + omrade + "'";
            String svar1 = idb.fetchSingle(namnID);
            String svar2 = idb.fetchSingle(omradesID);
            String nuvChef = "Select namn from agent where agent_id = (Select agent_id from omradeschef where omrade = " + svar2 + ")";
            String svar3 = idb.fetchSingle(nuvChef);
            System.out.println(agentNamn);
            System.out.println(svar3);
            String taBort = "delete from omradeschef where Agent_ID = '" + svar1 + "'";
            String taBortNuvarande = "delete from omradeschef where omrade = " + svar2;
            String nyChef = "insert into omradeschef values (" + svar1 + "," + svar2 + ")";
            String nyttOmrade = "update agent set omrade = " + svar2 + " where agent_id = " + svar1;

            boolean ejValdBox1 = Validering.indexInteNoll(cbAgenter.getSelectedIndex());

            if (ejValdBox1 == true) {

                boolean ejValdBox2 = Validering.indexInteNoll(jComboBox1.getSelectedIndex());

                if (ejValdBox2 == true) {

                    if (!agentNamn.toLowerCase().equals(svar3.toLowerCase())) {

                        idb.fetchSingle(taBort);
                        idb.fetchSingle(taBortNuvarande);
                        idb.fetchSingle(nyChef);
                        idb.fetchSingle(nyttOmrade);
                        JOptionPane.showMessageDialog(null, "Områdeschefen har ändrats!");
                        cbAgenter.setSelectedIndex(0);
                        jComboBox1.setSelectedIndex(0);
                    } else {
                        JOptionPane.showMessageDialog(null, "Den valda agenten är redan områdeschef för valt område!");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Vänligen välj ett område!");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Vänligen välj en agent!");
            }

        } catch (InfException ie) {
            JOptionPane.showMessageDialog(null, "Databasfel");
            System.out.println(ie);
        }
   
            
    }//GEN-LAST:event_jButton1ActionPerformed

    public boolean kontrolleraOmrade(String omrade) {
        //Metod som kontrollerar så att inmatat område existerar i systemet
        boolean omradeFinns = false;

        try {
            String omradesNamn = "select benamning from Omrade";
            ArrayList<String> omraden = idb.fetchColumn(omradesNamn);
            for (String kollaOmrade : omraden) {
                if (kollaOmrade.toLowerCase().equals(omrade.toLowerCase())) {
                    omradeFinns = true;
                    break;
                }
            }
        } catch (InfException ie) {

        }

        return omradeFinns;
    }

    public boolean kontrolleraNamn(String agentNamn) {
        //metod som kontrollerar så att agent med visst namn inte redan är områdeschef
        boolean namnFinns = false;

        try {
            String namn = "select namn from Agent";
            ArrayList<String> agenter = idb.fetchColumn(namn);

            for (String agent : agenter) {
                if (agent.toLowerCase().equals(agentNamn.toLowerCase())) {
                    namnFinns = true;
                    break;
                }
            }

            return namnFinns;

        } catch (InfException ie) {

        }
        return namnFinns;
    }
    
    public boolean kontrolleraTidigareChefer(String omrade) {
        //metod som kontrollerar så att agent med visst namn inte redan är områdeschef
        boolean namnFinns = false;

        try {
            String namn = "select agent_id from from omradeschef";
            ArrayList<String> agenter = idb.fetchColumn(namn);

            for (String agent : agenter) {
                
                    namnFinns = true;
                    break;
                
            }

            return namnFinns;

        } catch (InfException ie) {

        }
        return namnFinns;
    }


    private void ButtonTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTillbakaActionPerformed
        // Tillbaka till huvudmeny admin

        HuvudMenyAdmin huvudMenyAdmin = new HuvudMenyAdmin(idb, agent);
        huvudMenyAdmin.setVisible(true);
        dispose();
    }//GEN-LAST:event_ButtonTillbakaActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        
    
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    public void laggTillOmrade(JComboBox cb) {
        String omradesFraga = "Select benamning from omrade";

        ArrayList<String> allaOmraden;

        try {
            allaOmraden = idb.fetchColumn(omradesFraga);
            for (String o : allaOmraden) {
                cb.addItem(o);
            }

        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null,"Något gick fel");
            System.out.println(ex);
            
        }
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonTillbaka;
    private javax.swing.JComboBox<String> cbAgenter;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
